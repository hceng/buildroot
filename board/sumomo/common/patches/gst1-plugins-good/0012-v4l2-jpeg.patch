From a6c04d1378095ffa78cc450850ce19b9ba85488e Mon Sep 17 00:00:00 2001
From: ayaka <ayaka@soulik.info>
Date: Sat, 30 Jan 2016 03:53:40 +0800
Subject: [PATCH 12/12] v4l2: jpeg

---
 sys/v4l2/Makefile.am      |   2 +
 sys/v4l2/gstv4l2jpegenc.c | 132 ++++++++++++++++++++++++++++++++++++++++++++++
 sys/v4l2/gstv4l2jpegenc.h |  63 ++++++++++++++++++++++
 sys/v4l2/v4l2-utils.c     |   2 +
 4 files changed, 199 insertions(+)
 create mode 100644 sys/v4l2/gstv4l2jpegenc.c
 create mode 100644 sys/v4l2/gstv4l2jpegenc.h

diff --git a/sys/v4l2/Makefile.am b/sys/v4l2/Makefile.am
index 6981e2d..c4c9617 100644
--- a/sys/v4l2/Makefile.am
+++ b/sys/v4l2/Makefile.am
@@ -16,6 +16,7 @@ libgstvideo4linux2_la_SOURCES = gstv4l2.c \
 				gstv4l2videodec.c \
 				gstv4l2videoenc.c \
 				gstv4l2h264enc.c \
+				gstv4l2jpegenc.c \
 				gstv4l2vidorient.c \
 				v4l2_calls.c \
 				v4l2-utils.c \
@@ -59,6 +60,7 @@ noinst_HEADERS = \
 	gstv4l2videodec.h \
 	gstv4l2videoenc.h \
 	gstv4l2h264enc.h \
+	gstv4l2jpegenc.h \
 	gstv4l2vidorient.h \
 	v4l2_calls.h \
 	v4l2-utils.h \
diff --git a/sys/v4l2/gstv4l2jpegenc.c b/sys/v4l2/gstv4l2jpegenc.c
new file mode 100644
index 0000000..f526d02
--- /dev/null
+++ b/sys/v4l2/gstv4l2jpegenc.c
@@ -0,0 +1,132 @@
+/*
+ * Copyright (C) 2014 SUMOMO Computer Association
+ *     Author: ayaka <ayaka@soulik.info>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ *
+ */
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <errno.h>
+#include <unistd.h>
+#include <string.h>
+
+#include "gstv4l2jpegenc.h"
+#include "v4l2_calls.h"
+
+#include <string.h>
+#include <gst/gst-i18n-plugin.h>
+
+GST_DEBUG_CATEGORY_STATIC (gst_v4l2_jpeg_enc_debug);
+#define GST_CAT_DEFAULT gst_v4l2_jpeg_enc_debug
+
+enum
+{
+  PROP_0,
+  V4L2_STD_OBJECT_PROPS,
+};
+
+#define gst_v4l2_jpeg_enc_parent_class parent_class
+G_DEFINE_TYPE (GstV4l2JpegEnc, gst_v4l2_jpeg_enc, GST_TYPE_V4L2_VIDEO_ENC);
+
+static void
+gst_v4l2_jpeg_enc_set_property (GObject * object,
+    guint prop_id, const GValue * value, GParamSpec * pspec)
+{
+}
+
+static void
+gst_v4l2_jpeg_enc_get_property (GObject * object,
+    guint prop_id, GValue * value, GParamSpec * pspec)
+{
+}
+
+static GstFlowReturn
+gst_v4l2_jpeg_enc_handle_frame (GstVideoEncoder * encoder,
+    GstVideoCodecFrame * frame)
+{
+  GstV4l2JpegEnc *self = GST_V4L2_JPEG_ENC (encoder);
+  GstV4l2VideoEnc *parent = GST_V4L2_VIDEO_ENC (encoder);
+  GstCaps *outcaps;
+
+  if (G_UNLIKELY (!GST_V4L2_IS_ACTIVE (parent->v4l2capture))) {
+    outcaps = gst_caps_new_empty_simple ("image/jpeg");
+    return GST_V4L2_VIDEO_ENC_CLASS (parent_class)->handle_frame
+        (encoder, frame, outcaps);
+  }
+
+  return GST_V4L2_VIDEO_ENC_CLASS (parent_class)->handle_frame
+      (encoder, frame, NULL);
+}
+
+static void
+gst_v4l2_jpeg_enc_init (GstV4l2JpegEnc * self)
+{
+
+}
+
+static void
+gst_v4l2_jpeg_enc_class_init (GstV4l2JpegEncClass * klass)
+{
+  GstElementClass *element_class;
+  GObjectClass *gobject_class;
+  GstV4l2VideoEncClass *v4l2_encoder_class;
+  GstVideoEncoderClass *baseclass;
+
+  parent_class = g_type_class_peek_parent (klass);
+
+  element_class = (GstElementClass *) klass;
+  gobject_class = (GObjectClass *) klass;
+  v4l2_encoder_class = GST_V4L2_VIDEO_ENC_CLASS (klass);
+  baseclass = GST_VIDEO_ENCODER_CLASS (klass);
+
+  GST_DEBUG_CATEGORY_INIT (gst_v4l2_jpeg_enc_debug, "v4l2jpegenc", 0,
+      "V4L2 JPEG Encoder");
+
+  gst_element_class_set_static_metadata (element_class,
+      "V4L2 JPEG Encoder",
+      "Codec/Encoder/Video",
+      "Encode JPEG image via V4L2 API", "ayaka <ayaka@soulik.info>");
+
+  gobject_class->set_property =
+      GST_DEBUG_FUNCPTR (gst_v4l2_jpeg_enc_set_property);
+  gobject_class->get_property =
+      GST_DEBUG_FUNCPTR (gst_v4l2_jpeg_enc_get_property);
+  /* FIXME propose_allocation or not ? */
+  baseclass->handle_frame = GST_DEBUG_FUNCPTR (gst_v4l2_jpeg_enc_handle_frame);
+
+  gst_v4l2_object_install_m2m_properties_helper (gobject_class);
+
+}
+
+/* Probing functions */
+gboolean
+gst_v4l2_is_jpeg_enc (GstCaps * sink_caps, GstCaps * src_caps)
+{
+  gboolean ret = FALSE;
+
+  if (gst_caps_is_subset (sink_caps, gst_v4l2_object_get_raw_caps ())
+      && gst_caps_can_intersect (src_caps,
+          gst_caps_from_string ("image/jpeg")))
+    ret = TRUE;
+
+  return ret;
+}
diff --git a/sys/v4l2/gstv4l2jpegenc.h b/sys/v4l2/gstv4l2jpegenc.h
new file mode 100644
index 0000000..a2f557d
--- /dev/null
+++ b/sys/v4l2/gstv4l2jpegenc.h
@@ -0,0 +1,63 @@
+/*
+ * Copyright (C) 2014 SUMOMO Computer Association.
+ *     Author: ayaka <ayaka@soulik.info>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ *
+ */
+
+#ifndef __GST_V4L2_JPEG_ENC_H__
+#define __GST_V4L2_JPEG_ENC_H__
+
+#include <gst/gst.h>
+#include "gstv4l2videoenc.h"
+
+GST_DEBUG_CATEGORY_EXTERN (v4l2jpegenc_debug);
+
+G_BEGIN_DECLS
+#define GST_TYPE_V4L2_JPEG_ENC \
+  (gst_v4l2_jpeg_enc_get_type())
+#define GST_V4L2_JPEG_ENC(obj) \
+  (G_TYPE_CHECK_INSTANCE_CAST((obj),GST_TYPE_V4L2_JPEG_ENC,GstV4l2JpegEnc))
+#define GST_V4L2_JPEG_ENC_CLASS(klass) \
+  (G_TYPE_CHECK_CLASS_CAST((klass),GST_TYPE_V4L2_JPEG_ENC,GstV4l2JpegEncClass))
+#define GST_IS_V4L2_JPEG_ENC(obj) \
+  (G_TYPE_CHECK_INSTANCE_TYPE((obj),GST_TYPE_V4L2_JPEG_ENC))
+#define GST_IS_V4L2_JPEG_ENC_CLASS(obj) \
+  (G_TYPE_CHECK_CLASS_TYPE((klass),GST_TYPE_V4L2_JPEG_ENC))
+typedef struct _GstV4l2JpegEnc GstV4l2JpegEnc;
+typedef struct _GstV4l2JpegEncClass GstV4l2JpegEncClass;
+
+struct _GstV4l2JpegEnc
+{
+  GstV4l2VideoEnc parent;
+};
+
+struct _GstV4l2JpegEncClass
+{
+  GstV4l2VideoEncClass parent_class;
+};
+
+GType gst_v4l2_jpeg_enc_get_type (void);
+
+gboolean gst_v4l2_is_jpeg_enc (GstCaps * sink_caps, GstCaps * src_caps);
+
+gboolean gst_v4l2_jpeg_enc_register (GstPlugin * plugin,
+    const gchar * basename,
+    const gchar * device_path, GstCaps * sink_caps, GstCaps * src_caps);
+
+G_END_DECLS
+#endif /* __GST_V4L2_JPEG_ENC_H__ */
diff --git a/sys/v4l2/v4l2-utils.c b/sys/v4l2/v4l2-utils.c
index c993043..bd63838 100644
--- a/sys/v4l2/v4l2-utils.c
+++ b/sys/v4l2/v4l2-utils.c
@@ -28,6 +28,7 @@
 #include "gstv4l2videodec.h"
 #include "gstv4l2videoenc.h"
 #include "gstv4l2h264enc.h"
+#include "gstv4l2jpegenc.h"
 #include "string.h"
 
 /**************************/
@@ -183,6 +184,7 @@ static const struct v4l2_elements elements[] = {
   gst_v4l2_video_enc_get_type, NULL, TRUE, "videoenc"},*/
   {gst_v4l2_video_dec_get_type, gst_v4l2_is_video_dec, FALSE, "videodec"},
   {gst_v4l2_h264_enc_get_type, gst_v4l2_is_h264_enc, TRUE, "h264enc"},
+  {gst_v4l2_jpeg_enc_get_type, gst_v4l2_is_jpeg_enc, TRUE, "jpegenc"},
 };
 
 static void
-- 
2.5.0

